services:
  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 1111
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    networks:
      - postgres
    ports:
      - "5432:5432"
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - postgres

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - postgres

  config-server:
    container_name: config-server
    image: pradeeppvj/config-server:latest
    ports:
      - "8080:8080"
    depends_on:
      - service-registry
    networks:
      - postgres
      - microservices-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  service-registry:
    container_name: service-registry
    image: pradeeppvj/service-registry:latest
    ports:
      - "8761:8761"
    depends_on:
      - rabbitmq
      - zipkin
      - postgres
      - pgadmin
    networks:
      - postgres
      - microservices-network

  company-ms:
    container_name: company-ms
    image: pradeeppvj/company-ms:latest
    ports:
      - "8081:8081"
    depends_on:
      - config-server
      - service-registry
    networks:
      - postgres
      - microservices-network
    environment:                     
      - SPRING_PROFILES_ACTIVE=docker

  job-ms:
    container_name: job-ms
    image: pradeeppvj/job-ms:latest
    ports:
      - "8082:8082"
    depends_on:
      - config-server
      - service-registry
    networks:
      - postgres
      - microservices-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULT_ZONE=http://service-registry:8761/eureka

  review-ms:
    container_name: review-ms
    image: pradeeppvj/review-ms:latest
    ports:
      - "8083:8083"
    depends_on:
      - config-server
      - service-registry
    networks:
      - postgres
      - microservices-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULT_ZONE=http://service-registry:8761/eureka

  api-gateway:
     container_name: api-gateway
     image: pradeeppvj/api-gateway:latest
     ports:
       - "8084:8084"
     depends_on:
       - config-server
       - service-registry
     networks:
       - postgres
       - microservices-network
     environment:
       - SPRING_PROFILES_ACTIVE=docker
       - EUREKA_CLIENT_SERVICEURL_DEFAULT_ZONE=http://service-registry:8761/eureka
         
networks:
  microservices-network:
    driver: bridge
  postgres:
    driver: bridge

volumes:
  postgres:
  pgadmin:

